# Makefile.in generated by automake 1.15 from Makefile.am.
# @configure_input@

# Copyright (C) 1994-2014 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

VPATH = @srcdir@
am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
sbin_PROGRAMS = dnscrypt-proxy$(EXEEXT)
@HAVE_SYSTEMD_TRUE@am__append_1 = $(SYSTEMD_LIBS) $(SYSTEMD_DAEMON_LIBS)
@PLUGINS_TRUE@am__append_2 = \
@PLUGINS_TRUE@	$(LTDLINCL) \
@PLUGINS_TRUE@	-I../include \
@PLUGINS_TRUE@	-DPLUGINS_ROOT=\"$(pkglibdir)/\"

@PLUGINS_TRUE@am__append_3 = $(LIBLTDL)
@PLUGINS_TRUE@am__append_4 = $(LTDLDEPS)
@PLUGINS_TRUE@am__append_5 = \
@PLUGINS_TRUE@	plugin_options.c \
@PLUGINS_TRUE@	plugin_options.h \
@PLUGINS_TRUE@	plugin_support.c \
@PLUGINS_TRUE@	plugin_support.h \
@PLUGINS_TRUE@	plugin_support_p.h

subdir = src/proxy
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/ax_check_compile_flag.m4 \
	$(top_srcdir)/m4/ax_check_link_flag.m4 \
	$(top_srcdir)/m4/libtool.m4 $(top_srcdir)/m4/ltargz.m4 \
	$(top_srcdir)/m4/ltdl.m4 $(top_srcdir)/m4/ltoptions.m4 \
	$(top_srcdir)/m4/ltsugar.m4 $(top_srcdir)/m4/ltversion.m4 \
	$(top_srcdir)/m4/lt~obsolete.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__installdirs = "$(DESTDIR)$(sbindir)"
PROGRAMS = $(sbin_PROGRAMS)
am__dnscrypt_proxy_SOURCES_DIST = app.c app.h cert.c cert.h cert_p.h \
	dnscrypt.c dnscrypt.h dnscrypt_client.c dnscrypt_client.h \
	dnscrypt_proxy.h edns.c edns.h getpwnam.h logger.c logger.h \
	minicsv.c minicsv.h options.c options.h pathnames.h pid_file.c \
	pid_file.h probes_dnscrypt_proxy.d probes_no_dtrace.h \
	safe_rw.c safe_rw.h sandboxes.c sandboxes.h stack_trace.c \
	stack_trace.h tcp_request.c tcp_request.h tcp_request_p.h \
	udp_request.c udp_request.h udp_request_p.h utils.c utils.h \
	windows_service.c windows_service.h plugin_options.c \
	plugin_options.h plugin_support.c plugin_support.h \
	plugin_support_p.h
@PLUGINS_TRUE@am__objects_1 = dnscrypt_proxy-plugin_options.$(OBJEXT) \
@PLUGINS_TRUE@	dnscrypt_proxy-plugin_support.$(OBJEXT)
am_dnscrypt_proxy_OBJECTS = dnscrypt_proxy-app.$(OBJEXT) \
	dnscrypt_proxy-cert.$(OBJEXT) \
	dnscrypt_proxy-dnscrypt.$(OBJEXT) \
	dnscrypt_proxy-dnscrypt_client.$(OBJEXT) \
	dnscrypt_proxy-edns.$(OBJEXT) dnscrypt_proxy-logger.$(OBJEXT) \
	dnscrypt_proxy-minicsv.$(OBJEXT) \
	dnscrypt_proxy-options.$(OBJEXT) \
	dnscrypt_proxy-pid_file.$(OBJEXT) \
	dnscrypt_proxy-safe_rw.$(OBJEXT) \
	dnscrypt_proxy-sandboxes.$(OBJEXT) \
	dnscrypt_proxy-stack_trace.$(OBJEXT) \
	dnscrypt_proxy-tcp_request.$(OBJEXT) \
	dnscrypt_proxy-udp_request.$(OBJEXT) \
	dnscrypt_proxy-utils.$(OBJEXT) \
	dnscrypt_proxy-windows_service.$(OBJEXT) $(am__objects_1)
dnscrypt_proxy_OBJECTS = $(am_dnscrypt_proxy_OBJECTS)
am__DEPENDENCIES_1 =
@HAVE_SYSTEMD_TRUE@am__DEPENDENCIES_2 = $(am__DEPENDENCIES_1) \
@HAVE_SYSTEMD_TRUE@	$(am__DEPENDENCIES_1)
@PLUGINS_TRUE@am__DEPENDENCIES_3 = $(am__DEPENDENCIES_1)
AM_V_lt = $(am__v_lt_@AM_V@)
am__v_lt_ = $(am__v_lt_@AM_DEFAULT_V@)
am__v_lt_0 = --silent
am__v_lt_1 = 
dnscrypt_proxy_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(dnscrypt_proxy_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o \
	$@
AM_V_P = $(am__v_P_@AM_V@)
am__v_P_ = $(am__v_P_@AM_DEFAULT_V@)
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_@AM_V@)
am__v_GEN_ = $(am__v_GEN_@AM_DEFAULT_V@)
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_@AM_V@)
am__v_at_ = $(am__v_at_@AM_DEFAULT_V@)
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/libltdl/config/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_@AM_V@)
am__v_CC_ = $(am__v_CC_@AM_DEFAULT_V@)
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_@AM_V@)
am__v_CCLD_ = $(am__v_CCLD_@AM_DEFAULT_V@)
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = $(dnscrypt_proxy_SOURCES)
DIST_SOURCES = $(am__dnscrypt_proxy_SOURCES_DIST)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
am__DIST_COMMON = $(srcdir)/Makefile.in \
	$(top_srcdir)/libltdl/config/depcomp
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
AR = @AR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CWFLAGS = @CWFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DLLTOOL = @DLLTOOL@
DSYMUTIL = @DSYMUTIL@
DTRACE = @DTRACE@
DUMPBIN = @DUMPBIN@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
FGREP = @FGREP@
GREP = @GREP@
INCLTDL = @INCLTDL@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
ISODATE = @ISODATE@
LD = @LD@
LDFLAGS = @LDFLAGS@
LDNS_LIBS = @LDNS_LIBS@
LIBADD_DL = @LIBADD_DL@
LIBADD_DLD_LINK = @LIBADD_DLD_LINK@
LIBADD_DLOPEN = @LIBADD_DLOPEN@
LIBADD_SHL_LOAD = @LIBADD_SHL_LOAD@
LIBLTDL = @LIBLTDL@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LIBTOOL_DEPS = @LIBTOOL_DEPS@
LIPO = @LIPO@
LN_S = @LN_S@
LTDLDEPS = @LTDLDEPS@
LTDLINCL = @LTDLINCL@
LTDLOPEN = @LTDLOPEN@
LTLIBOBJS = @LTLIBOBJS@
LT_ARGZ_H = @LT_ARGZ_H@
LT_CONFIG_H = @LT_CONFIG_H@
LT_DLLOADERS = @LT_DLLOADERS@
LT_DLPREOPEN = @LT_DLPREOPEN@
LT_SYS_LIBRARY_PATH = @LT_SYS_LIBRARY_PATH@
MAINT = @MAINT@
MAKEINFO = @MAKEINFO@
MANIFEST_TOOL = @MANIFEST_TOOL@
MKDIR_P = @MKDIR_P@
NM = @NM@
NMEDIT = @NMEDIT@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PKG_CONFIG = @PKG_CONFIG@
PKG_CONFIG_LIBDIR = @PKG_CONFIG_LIBDIR@
PKG_CONFIG_PATH = @PKG_CONFIG_PATH@
PROBES_SOURCE = @PROBES_SOURCE@
RANLIB = @RANLIB@
RONN = @RONN@
SAFECODE_HOME = @SAFECODE_HOME@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
SIXJACK = @SIXJACK@
STRIP = @STRIP@
SYSTEMD_CFLAGS = @SYSTEMD_CFLAGS@
SYSTEMD_DAEMON_CFLAGS = @SYSTEMD_DAEMON_CFLAGS@
SYSTEMD_DAEMON_LIBS = @SYSTEMD_DAEMON_LIBS@
SYSTEMD_LIBS = @SYSTEMD_LIBS@
VERSION = @VERSION@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_AR = @ac_ct_AR@
ac_ct_CC = @ac_ct_CC@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
ltdl_LIBOBJS = @ltdl_LIBOBJS@
ltdl_LTLIBOBJS = @ltdl_LTLIBOBJS@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
subdirs = @subdirs@
sys_symbol_underscore = @sys_symbol_underscore@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
dnscrypt_proxy_SOURCES = app.c app.h cert.c cert.h cert_p.h dnscrypt.c \
	dnscrypt.h dnscrypt_client.c dnscrypt_client.h \
	dnscrypt_proxy.h edns.c edns.h getpwnam.h logger.c logger.h \
	minicsv.c minicsv.h options.c options.h pathnames.h pid_file.c \
	pid_file.h probes_dnscrypt_proxy.d probes_no_dtrace.h \
	safe_rw.c safe_rw.h sandboxes.c sandboxes.h stack_trace.c \
	stack_trace.h tcp_request.c tcp_request.h tcp_request_p.h \
	udp_request.c udp_request.h udp_request_p.h utils.c utils.h \
	windows_service.c windows_service.h $(am__append_5)
AM_CFLAGS = @CWFLAGS@
AM_CPPFLAGS = -I../ext -I../libevent-modified/include \
	-DPKGDATADIR='"${pkgdatadir}"' $(am__append_2)
dnscrypt_proxy_LDADD = ../libevent-modified/libevent_extra.la \
	../libevent-modified/libevent_core.la $(am__append_1) \
	$(am__append_3)
dnscrypt_proxy_DEPENDENCIES = ../libevent-modified/libevent_extra.la \
	../libevent-modified/libevent_core.la $(am__append_4)
BUILT_SOURCES = \
	probes.h

CLEANFILES = \
	probes.h \
	probes_dnscrypt_proxy.h

@HAVE_SYSTEMD_TRUE@dnscrypt_proxy_CFLAGS = $(SYSTEMD_CFLAGS) $(SYSTEMD_DAEMON_CFLAGS)
all: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu src/proxy/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu src/proxy/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: @MAINTAINER_MODE_TRUE@ $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): @MAINTAINER_MODE_TRUE@ $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-sbinPROGRAMS: $(sbin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(sbin_PROGRAMS)'; test -n "$(sbindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(sbindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(sbindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p \
	 || test -f $$p1 \
	  ; then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' \
	    -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	    echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(sbindir)$$dir'"; \
	    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(sbindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-sbinPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(sbin_PROGRAMS)'; test -n "$(sbindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' \
	`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(sbindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(sbindir)" && rm -f $$files

clean-sbinPROGRAMS:
	@list='$(sbin_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

dnscrypt-proxy$(EXEEXT): $(dnscrypt_proxy_OBJECTS) $(dnscrypt_proxy_DEPENDENCIES) $(EXTRA_dnscrypt_proxy_DEPENDENCIES) 
	@rm -f dnscrypt-proxy$(EXEEXT)
	$(AM_V_CCLD)$(dnscrypt_proxy_LINK) $(dnscrypt_proxy_OBJECTS) $(dnscrypt_proxy_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dnscrypt_proxy-app.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dnscrypt_proxy-cert.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dnscrypt_proxy-dnscrypt.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dnscrypt_proxy-dnscrypt_client.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dnscrypt_proxy-edns.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dnscrypt_proxy-logger.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dnscrypt_proxy-minicsv.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dnscrypt_proxy-options.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dnscrypt_proxy-pid_file.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dnscrypt_proxy-plugin_options.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dnscrypt_proxy-plugin_support.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dnscrypt_proxy-safe_rw.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dnscrypt_proxy-sandboxes.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dnscrypt_proxy-stack_trace.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dnscrypt_proxy-tcp_request.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dnscrypt_proxy-udp_request.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dnscrypt_proxy-utils.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dnscrypt_proxy-windows_service.Po@am__quote@

.c.o:
@am__fastdepCC_TRUE@	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCC_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(COMPILE) -c -o $@ $<

.c.obj:
@am__fastdepCC_TRUE@	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
@am__fastdepCC_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.c.lo:
@am__fastdepCC_TRUE@	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
@am__fastdepCC_TRUE@	$(LTCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCC_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LTCOMPILE) -c -o $@ $<

dnscrypt_proxy-app.o: app.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dnscrypt_proxy_CFLAGS) $(CFLAGS) -MT dnscrypt_proxy-app.o -MD -MP -MF $(DEPDIR)/dnscrypt_proxy-app.Tpo -c -o dnscrypt_proxy-app.o `test -f 'app.c' || echo '$(srcdir)/'`app.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/dnscrypt_proxy-app.Tpo $(DEPDIR)/dnscrypt_proxy-app.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='app.c' object='dnscrypt_proxy-app.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dnscrypt_proxy_CFLAGS) $(CFLAGS) -c -o dnscrypt_proxy-app.o `test -f 'app.c' || echo '$(srcdir)/'`app.c

dnscrypt_proxy-app.obj: app.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dnscrypt_proxy_CFLAGS) $(CFLAGS) -MT dnscrypt_proxy-app.obj -MD -MP -MF $(DEPDIR)/dnscrypt_proxy-app.Tpo -c -o dnscrypt_proxy-app.obj `if test -f 'app.c'; then $(CYGPATH_W) 'app.c'; else $(CYGPATH_W) '$(srcdir)/app.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/dnscrypt_proxy-app.Tpo $(DEPDIR)/dnscrypt_proxy-app.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='app.c' object='dnscrypt_proxy-app.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dnscrypt_proxy_CFLAGS) $(CFLAGS) -c -o dnscrypt_proxy-app.obj `if test -f 'app.c'; then $(CYGPATH_W) 'app.c'; else $(CYGPATH_W) '$(srcdir)/app.c'; fi`

dnscrypt_proxy-cert.o: cert.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dnscrypt_proxy_CFLAGS) $(CFLAGS) -MT dnscrypt_proxy-cert.o -MD -MP -MF $(DEPDIR)/dnscrypt_proxy-cert.Tpo -c -o dnscrypt_proxy-cert.o `test -f 'cert.c' || echo '$(srcdir)/'`cert.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/dnscrypt_proxy-cert.Tpo $(DEPDIR)/dnscrypt_proxy-cert.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='cert.c' object='dnscrypt_proxy-cert.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dnscrypt_proxy_CFLAGS) $(CFLAGS) -c -o dnscrypt_proxy-cert.o `test -f 'cert.c' || echo '$(srcdir)/'`cert.c

dnscrypt_proxy-cert.obj: cert.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dnscrypt_proxy_CFLAGS) $(CFLAGS) -MT dnscrypt_proxy-cert.obj -MD -MP -MF $(DEPDIR)/dnscrypt_proxy-cert.Tpo -c -o dnscrypt_proxy-cert.obj `if test -f 'cert.c'; then $(CYGPATH_W) 'cert.c'; else $(CYGPATH_W) '$(srcdir)/cert.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/dnscrypt_proxy-cert.Tpo $(DEPDIR)/dnscrypt_proxy-cert.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='cert.c' object='dnscrypt_proxy-cert.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dnscrypt_proxy_CFLAGS) $(CFLAGS) -c -o dnscrypt_proxy-cert.obj `if test -f 'cert.c'; then $(CYGPATH_W) 'cert.c'; else $(CYGPATH_W) '$(srcdir)/cert.c'; fi`

dnscrypt_proxy-dnscrypt.o: dnscrypt.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dnscrypt_proxy_CFLAGS) $(CFLAGS) -MT dnscrypt_proxy-dnscrypt.o -MD -MP -MF $(DEPDIR)/dnscrypt_proxy-dnscrypt.Tpo -c -o dnscrypt_proxy-dnscrypt.o `test -f 'dnscrypt.c' || echo '$(srcdir)/'`dnscrypt.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/dnscrypt_proxy-dnscrypt.Tpo $(DEPDIR)/dnscrypt_proxy-dnscrypt.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='dnscrypt.c' object='dnscrypt_proxy-dnscrypt.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dnscrypt_proxy_CFLAGS) $(CFLAGS) -c -o dnscrypt_proxy-dnscrypt.o `test -f 'dnscrypt.c' || echo '$(srcdir)/'`dnscrypt.c

dnscrypt_proxy-dnscrypt.obj: dnscrypt.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dnscrypt_proxy_CFLAGS) $(CFLAGS) -MT dnscrypt_proxy-dnscrypt.obj -MD -MP -MF $(DEPDIR)/dnscrypt_proxy-dnscrypt.Tpo -c -o dnscrypt_proxy-dnscrypt.obj `if test -f 'dnscrypt.c'; then $(CYGPATH_W) 'dnscrypt.c'; else $(CYGPATH_W) '$(srcdir)/dnscrypt.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/dnscrypt_proxy-dnscrypt.Tpo $(DEPDIR)/dnscrypt_proxy-dnscrypt.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='dnscrypt.c' object='dnscrypt_proxy-dnscrypt.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dnscrypt_proxy_CFLAGS) $(CFLAGS) -c -o dnscrypt_proxy-dnscrypt.obj `if test -f 'dnscrypt.c'; then $(CYGPATH_W) 'dnscrypt.c'; else $(CYGPATH_W) '$(srcdir)/dnscrypt.c'; fi`

dnscrypt_proxy-dnscrypt_client.o: dnscrypt_client.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dnscrypt_proxy_CFLAGS) $(CFLAGS) -MT dnscrypt_proxy-dnscrypt_client.o -MD -MP -MF $(DEPDIR)/dnscrypt_proxy-dnscrypt_client.Tpo -c -o dnscrypt_proxy-dnscrypt_client.o `test -f 'dnscrypt_client.c' || echo '$(srcdir)/'`dnscrypt_client.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/dnscrypt_proxy-dnscrypt_client.Tpo $(DEPDIR)/dnscrypt_proxy-dnscrypt_client.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='dnscrypt_client.c' object='dnscrypt_proxy-dnscrypt_client.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dnscrypt_proxy_CFLAGS) $(CFLAGS) -c -o dnscrypt_proxy-dnscrypt_client.o `test -f 'dnscrypt_client.c' || echo '$(srcdir)/'`dnscrypt_client.c

dnscrypt_proxy-dnscrypt_client.obj: dnscrypt_client.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dnscrypt_proxy_CFLAGS) $(CFLAGS) -MT dnscrypt_proxy-dnscrypt_client.obj -MD -MP -MF $(DEPDIR)/dnscrypt_proxy-dnscrypt_client.Tpo -c -o dnscrypt_proxy-dnscrypt_client.obj `if test -f 'dnscrypt_client.c'; then $(CYGPATH_W) 'dnscrypt_client.c'; else $(CYGPATH_W) '$(srcdir)/dnscrypt_client.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/dnscrypt_proxy-dnscrypt_client.Tpo $(DEPDIR)/dnscrypt_proxy-dnscrypt_client.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='dnscrypt_client.c' object='dnscrypt_proxy-dnscrypt_client.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dnscrypt_proxy_CFLAGS) $(CFLAGS) -c -o dnscrypt_proxy-dnscrypt_client.obj `if test -f 'dnscrypt_client.c'; then $(CYGPATH_W) 'dnscrypt_client.c'; else $(CYGPATH_W) '$(srcdir)/dnscrypt_client.c'; fi`

dnscrypt_proxy-edns.o: edns.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dnscrypt_proxy_CFLAGS) $(CFLAGS) -MT dnscrypt_proxy-edns.o -MD -MP -MF $(DEPDIR)/dnscrypt_proxy-edns.Tpo -c -o dnscrypt_proxy-edns.o `test -f 'edns.c' || echo '$(srcdir)/'`edns.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/dnscrypt_proxy-edns.Tpo $(DEPDIR)/dnscrypt_proxy-edns.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='edns.c' object='dnscrypt_proxy-edns.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dnscrypt_proxy_CFLAGS) $(CFLAGS) -c -o dnscrypt_proxy-edns.o `test -f 'edns.c' || echo '$(srcdir)/'`edns.c

dnscrypt_proxy-edns.obj: edns.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dnscrypt_proxy_CFLAGS) $(CFLAGS) -MT dnscrypt_proxy-edns.obj -MD -MP -MF $(DEPDIR)/dnscrypt_proxy-edns.Tpo -c -o dnscrypt_proxy-edns.obj `if test -f 'edns.c'; then $(CYGPATH_W) 'edns.c'; else $(CYGPATH_W) '$(srcdir)/edns.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/dnscrypt_proxy-edns.Tpo $(DEPDIR)/dnscrypt_proxy-edns.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='edns.c' object='dnscrypt_proxy-edns.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dnscrypt_proxy_CFLAGS) $(CFLAGS) -c -o dnscrypt_proxy-edns.obj `if test -f 'edns.c'; then $(CYGPATH_W) 'edns.c'; else $(CYGPATH_W) '$(srcdir)/edns.c'; fi`

dnscrypt_proxy-logger.o: logger.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dnscrypt_proxy_CFLAGS) $(CFLAGS) -MT dnscrypt_proxy-logger.o -MD -MP -MF $(DEPDIR)/dnscrypt_proxy-logger.Tpo -c -o dnscrypt_proxy-logger.o `test -f 'logger.c' || echo '$(srcdir)/'`logger.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/dnscrypt_proxy-logger.Tpo $(DEPDIR)/dnscrypt_proxy-logger.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='logger.c' object='dnscrypt_proxy-logger.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dnscrypt_proxy_CFLAGS) $(CFLAGS) -c -o dnscrypt_proxy-logger.o `test -f 'logger.c' || echo '$(srcdir)/'`logger.c

dnscrypt_proxy-logger.obj: logger.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dnscrypt_proxy_CFLAGS) $(CFLAGS) -MT dnscrypt_proxy-logger.obj -MD -MP -MF $(DEPDIR)/dnscrypt_proxy-logger.Tpo -c -o dnscrypt_proxy-logger.obj `if test -f 'logger.c'; then $(CYGPATH_W) 'logger.c'; else $(CYGPATH_W) '$(srcdir)/logger.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/dnscrypt_proxy-logger.Tpo $(DEPDIR)/dnscrypt_proxy-logger.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='logger.c' object='dnscrypt_proxy-logger.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dnscrypt_proxy_CFLAGS) $(CFLAGS) -c -o dnscrypt_proxy-logger.obj `if test -f 'logger.c'; then $(CYGPATH_W) 'logger.c'; else $(CYGPATH_W) '$(srcdir)/logger.c'; fi`

dnscrypt_proxy-minicsv.o: minicsv.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dnscrypt_proxy_CFLAGS) $(CFLAGS) -MT dnscrypt_proxy-minicsv.o -MD -MP -MF $(DEPDIR)/dnscrypt_proxy-minicsv.Tpo -c -o dnscrypt_proxy-minicsv.o `test -f 'minicsv.c' || echo '$(srcdir)/'`minicsv.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/dnscrypt_proxy-minicsv.Tpo $(DEPDIR)/dnscrypt_proxy-minicsv.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='minicsv.c' object='dnscrypt_proxy-minicsv.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dnscrypt_proxy_CFLAGS) $(CFLAGS) -c -o dnscrypt_proxy-minicsv.o `test -f 'minicsv.c' || echo '$(srcdir)/'`minicsv.c

dnscrypt_proxy-minicsv.obj: minicsv.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dnscrypt_proxy_CFLAGS) $(CFLAGS) -MT dnscrypt_proxy-minicsv.obj -MD -MP -MF $(DEPDIR)/dnscrypt_proxy-minicsv.Tpo -c -o dnscrypt_proxy-minicsv.obj `if test -f 'minicsv.c'; then $(CYGPATH_W) 'minicsv.c'; else $(CYGPATH_W) '$(srcdir)/minicsv.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/dnscrypt_proxy-minicsv.Tpo $(DEPDIR)/dnscrypt_proxy-minicsv.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='minicsv.c' object='dnscrypt_proxy-minicsv.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dnscrypt_proxy_CFLAGS) $(CFLAGS) -c -o dnscrypt_proxy-minicsv.obj `if test -f 'minicsv.c'; then $(CYGPATH_W) 'minicsv.c'; else $(CYGPATH_W) '$(srcdir)/minicsv.c'; fi`

dnscrypt_proxy-options.o: options.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dnscrypt_proxy_CFLAGS) $(CFLAGS) -MT dnscrypt_proxy-options.o -MD -MP -MF $(DEPDIR)/dnscrypt_proxy-options.Tpo -c -o dnscrypt_proxy-options.o `test -f 'options.c' || echo '$(srcdir)/'`options.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/dnscrypt_proxy-options.Tpo $(DEPDIR)/dnscrypt_proxy-options.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='options.c' object='dnscrypt_proxy-options.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dnscrypt_proxy_CFLAGS) $(CFLAGS) -c -o dnscrypt_proxy-options.o `test -f 'options.c' || echo '$(srcdir)/'`options.c

dnscrypt_proxy-options.obj: options.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dnscrypt_proxy_CFLAGS) $(CFLAGS) -MT dnscrypt_proxy-options.obj -MD -MP -MF $(DEPDIR)/dnscrypt_proxy-options.Tpo -c -o dnscrypt_proxy-options.obj `if test -f 'options.c'; then $(CYGPATH_W) 'options.c'; else $(CYGPATH_W) '$(srcdir)/options.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/dnscrypt_proxy-options.Tpo $(DEPDIR)/dnscrypt_proxy-options.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='options.c' object='dnscrypt_proxy-options.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dnscrypt_proxy_CFLAGS) $(CFLAGS) -c -o dnscrypt_proxy-options.obj `if test -f 'options.c'; then $(CYGPATH_W) 'options.c'; else $(CYGPATH_W) '$(srcdir)/options.c'; fi`

dnscrypt_proxy-pid_file.o: pid_file.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dnscrypt_proxy_CFLAGS) $(CFLAGS) -MT dnscrypt_proxy-pid_file.o -MD -MP -MF $(DEPDIR)/dnscrypt_proxy-pid_file.Tpo -c -o dnscrypt_proxy-pid_file.o `test -f 'pid_file.c' || echo '$(srcdir)/'`pid_file.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/dnscrypt_proxy-pid_file.Tpo $(DEPDIR)/dnscrypt_proxy-pid_file.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='pid_file.c' object='dnscrypt_proxy-pid_file.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dnscrypt_proxy_CFLAGS) $(CFLAGS) -c -o dnscrypt_proxy-pid_file.o `test -f 'pid_file.c' || echo '$(srcdir)/'`pid_file.c

dnscrypt_proxy-pid_file.obj: pid_file.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dnscrypt_proxy_CFLAGS) $(CFLAGS) -MT dnscrypt_proxy-pid_file.obj -MD -MP -MF $(DEPDIR)/dnscrypt_proxy-pid_file.Tpo -c -o dnscrypt_proxy-pid_file.obj `if test -f 'pid_file.c'; then $(CYGPATH_W) 'pid_file.c'; else $(CYGPATH_W) '$(srcdir)/pid_file.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/dnscrypt_proxy-pid_file.Tpo $(DEPDIR)/dnscrypt_proxy-pid_file.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='pid_file.c' object='dnscrypt_proxy-pid_file.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dnscrypt_proxy_CFLAGS) $(CFLAGS) -c -o dnscrypt_proxy-pid_file.obj `if test -f 'pid_file.c'; then $(CYGPATH_W) 'pid_file.c'; else $(CYGPATH_W) '$(srcdir)/pid_file.c'; fi`

dnscrypt_proxy-safe_rw.o: safe_rw.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dnscrypt_proxy_CFLAGS) $(CFLAGS) -MT dnscrypt_proxy-safe_rw.o -MD -MP -MF $(DEPDIR)/dnscrypt_proxy-safe_rw.Tpo -c -o dnscrypt_proxy-safe_rw.o `test -f 'safe_rw.c' || echo '$(srcdir)/'`safe_rw.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/dnscrypt_proxy-safe_rw.Tpo $(DEPDIR)/dnscrypt_proxy-safe_rw.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='safe_rw.c' object='dnscrypt_proxy-safe_rw.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dnscrypt_proxy_CFLAGS) $(CFLAGS) -c -o dnscrypt_proxy-safe_rw.o `test -f 'safe_rw.c' || echo '$(srcdir)/'`safe_rw.c

dnscrypt_proxy-safe_rw.obj: safe_rw.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dnscrypt_proxy_CFLAGS) $(CFLAGS) -MT dnscrypt_proxy-safe_rw.obj -MD -MP -MF $(DEPDIR)/dnscrypt_proxy-safe_rw.Tpo -c -o dnscrypt_proxy-safe_rw.obj `if test -f 'safe_rw.c'; then $(CYGPATH_W) 'safe_rw.c'; else $(CYGPATH_W) '$(srcdir)/safe_rw.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/dnscrypt_proxy-safe_rw.Tpo $(DEPDIR)/dnscrypt_proxy-safe_rw.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='safe_rw.c' object='dnscrypt_proxy-safe_rw.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dnscrypt_proxy_CFLAGS) $(CFLAGS) -c -o dnscrypt_proxy-safe_rw.obj `if test -f 'safe_rw.c'; then $(CYGPATH_W) 'safe_rw.c'; else $(CYGPATH_W) '$(srcdir)/safe_rw.c'; fi`

dnscrypt_proxy-sandboxes.o: sandboxes.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dnscrypt_proxy_CFLAGS) $(CFLAGS) -MT dnscrypt_proxy-sandboxes.o -MD -MP -MF $(DEPDIR)/dnscrypt_proxy-sandboxes.Tpo -c -o dnscrypt_proxy-sandboxes.o `test -f 'sandboxes.c' || echo '$(srcdir)/'`sandboxes.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/dnscrypt_proxy-sandboxes.Tpo $(DEPDIR)/dnscrypt_proxy-sandboxes.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='sandboxes.c' object='dnscrypt_proxy-sandboxes.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dnscrypt_proxy_CFLAGS) $(CFLAGS) -c -o dnscrypt_proxy-sandboxes.o `test -f 'sandboxes.c' || echo '$(srcdir)/'`sandboxes.c

dnscrypt_proxy-sandboxes.obj: sandboxes.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dnscrypt_proxy_CFLAGS) $(CFLAGS) -MT dnscrypt_proxy-sandboxes.obj -MD -MP -MF $(DEPDIR)/dnscrypt_proxy-sandboxes.Tpo -c -o dnscrypt_proxy-sandboxes.obj `if test -f 'sandboxes.c'; then $(CYGPATH_W) 'sandboxes.c'; else $(CYGPATH_W) '$(srcdir)/sandboxes.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/dnscrypt_proxy-sandboxes.Tpo $(DEPDIR)/dnscrypt_proxy-sandboxes.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='sandboxes.c' object='dnscrypt_proxy-sandboxes.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dnscrypt_proxy_CFLAGS) $(CFLAGS) -c -o dnscrypt_proxy-sandboxes.obj `if test -f 'sandboxes.c'; then $(CYGPATH_W) 'sandboxes.c'; else $(CYGPATH_W) '$(srcdir)/sandboxes.c'; fi`

dnscrypt_proxy-stack_trace.o: stack_trace.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dnscrypt_proxy_CFLAGS) $(CFLAGS) -MT dnscrypt_proxy-stack_trace.o -MD -MP -MF $(DEPDIR)/dnscrypt_proxy-stack_trace.Tpo -c -o dnscrypt_proxy-stack_trace.o `test -f 'stack_trace.c' || echo '$(srcdir)/'`stack_trace.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/dnscrypt_proxy-stack_trace.Tpo $(DEPDIR)/dnscrypt_proxy-stack_trace.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='stack_trace.c' object='dnscrypt_proxy-stack_trace.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dnscrypt_proxy_CFLAGS) $(CFLAGS) -c -o dnscrypt_proxy-stack_trace.o `test -f 'stack_trace.c' || echo '$(srcdir)/'`stack_trace.c

dnscrypt_proxy-stack_trace.obj: stack_trace.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dnscrypt_proxy_CFLAGS) $(CFLAGS) -MT dnscrypt_proxy-stack_trace.obj -MD -MP -MF $(DEPDIR)/dnscrypt_proxy-stack_trace.Tpo -c -o dnscrypt_proxy-stack_trace.obj `if test -f 'stack_trace.c'; then $(CYGPATH_W) 'stack_trace.c'; else $(CYGPATH_W) '$(srcdir)/stack_trace.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/dnscrypt_proxy-stack_trace.Tpo $(DEPDIR)/dnscrypt_proxy-stack_trace.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='stack_trace.c' object='dnscrypt_proxy-stack_trace.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dnscrypt_proxy_CFLAGS) $(CFLAGS) -c -o dnscrypt_proxy-stack_trace.obj `if test -f 'stack_trace.c'; then $(CYGPATH_W) 'stack_trace.c'; else $(CYGPATH_W) '$(srcdir)/stack_trace.c'; fi`

dnscrypt_proxy-tcp_request.o: tcp_request.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dnscrypt_proxy_CFLAGS) $(CFLAGS) -MT dnscrypt_proxy-tcp_request.o -MD -MP -MF $(DEPDIR)/dnscrypt_proxy-tcp_request.Tpo -c -o dnscrypt_proxy-tcp_request.o `test -f 'tcp_request.c' || echo '$(srcdir)/'`tcp_request.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/dnscrypt_proxy-tcp_request.Tpo $(DEPDIR)/dnscrypt_proxy-tcp_request.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='tcp_request.c' object='dnscrypt_proxy-tcp_request.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dnscrypt_proxy_CFLAGS) $(CFLAGS) -c -o dnscrypt_proxy-tcp_request.o `test -f 'tcp_request.c' || echo '$(srcdir)/'`tcp_request.c

dnscrypt_proxy-tcp_request.obj: tcp_request.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dnscrypt_proxy_CFLAGS) $(CFLAGS) -MT dnscrypt_proxy-tcp_request.obj -MD -MP -MF $(DEPDIR)/dnscrypt_proxy-tcp_request.Tpo -c -o dnscrypt_proxy-tcp_request.obj `if test -f 'tcp_request.c'; then $(CYGPATH_W) 'tcp_request.c'; else $(CYGPATH_W) '$(srcdir)/tcp_request.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/dnscrypt_proxy-tcp_request.Tpo $(DEPDIR)/dnscrypt_proxy-tcp_request.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='tcp_request.c' object='dnscrypt_proxy-tcp_request.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dnscrypt_proxy_CFLAGS) $(CFLAGS) -c -o dnscrypt_proxy-tcp_request.obj `if test -f 'tcp_request.c'; then $(CYGPATH_W) 'tcp_request.c'; else $(CYGPATH_W) '$(srcdir)/tcp_request.c'; fi`

dnscrypt_proxy-udp_request.o: udp_request.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dnscrypt_proxy_CFLAGS) $(CFLAGS) -MT dnscrypt_proxy-udp_request.o -MD -MP -MF $(DEPDIR)/dnscrypt_proxy-udp_request.Tpo -c -o dnscrypt_proxy-udp_request.o `test -f 'udp_request.c' || echo '$(srcdir)/'`udp_request.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/dnscrypt_proxy-udp_request.Tpo $(DEPDIR)/dnscrypt_proxy-udp_request.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='udp_request.c' object='dnscrypt_proxy-udp_request.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dnscrypt_proxy_CFLAGS) $(CFLAGS) -c -o dnscrypt_proxy-udp_request.o `test -f 'udp_request.c' || echo '$(srcdir)/'`udp_request.c

dnscrypt_proxy-udp_request.obj: udp_request.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dnscrypt_proxy_CFLAGS) $(CFLAGS) -MT dnscrypt_proxy-udp_request.obj -MD -MP -MF $(DEPDIR)/dnscrypt_proxy-udp_request.Tpo -c -o dnscrypt_proxy-udp_request.obj `if test -f 'udp_request.c'; then $(CYGPATH_W) 'udp_request.c'; else $(CYGPATH_W) '$(srcdir)/udp_request.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/dnscrypt_proxy-udp_request.Tpo $(DEPDIR)/dnscrypt_proxy-udp_request.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='udp_request.c' object='dnscrypt_proxy-udp_request.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dnscrypt_proxy_CFLAGS) $(CFLAGS) -c -o dnscrypt_proxy-udp_request.obj `if test -f 'udp_request.c'; then $(CYGPATH_W) 'udp_request.c'; else $(CYGPATH_W) '$(srcdir)/udp_request.c'; fi`

dnscrypt_proxy-utils.o: utils.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dnscrypt_proxy_CFLAGS) $(CFLAGS) -MT dnscrypt_proxy-utils.o -MD -MP -MF $(DEPDIR)/dnscrypt_proxy-utils.Tpo -c -o dnscrypt_proxy-utils.o `test -f 'utils.c' || echo '$(srcdir)/'`utils.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/dnscrypt_proxy-utils.Tpo $(DEPDIR)/dnscrypt_proxy-utils.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='utils.c' object='dnscrypt_proxy-utils.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dnscrypt_proxy_CFLAGS) $(CFLAGS) -c -o dnscrypt_proxy-utils.o `test -f 'utils.c' || echo '$(srcdir)/'`utils.c

dnscrypt_proxy-utils.obj: utils.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dnscrypt_proxy_CFLAGS) $(CFLAGS) -MT dnscrypt_proxy-utils.obj -MD -MP -MF $(DEPDIR)/dnscrypt_proxy-utils.Tpo -c -o dnscrypt_proxy-utils.obj `if test -f 'utils.c'; then $(CYGPATH_W) 'utils.c'; else $(CYGPATH_W) '$(srcdir)/utils.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/dnscrypt_proxy-utils.Tpo $(DEPDIR)/dnscrypt_proxy-utils.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='utils.c' object='dnscrypt_proxy-utils.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dnscrypt_proxy_CFLAGS) $(CFLAGS) -c -o dnscrypt_proxy-utils.obj `if test -f 'utils.c'; then $(CYGPATH_W) 'utils.c'; else $(CYGPATH_W) '$(srcdir)/utils.c'; fi`

dnscrypt_proxy-windows_service.o: windows_service.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dnscrypt_proxy_CFLAGS) $(CFLAGS) -MT dnscrypt_proxy-windows_service.o -MD -MP -MF $(DEPDIR)/dnscrypt_proxy-windows_service.Tpo -c -o dnscrypt_proxy-windows_service.o `test -f 'windows_service.c' || echo '$(srcdir)/'`windows_service.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/dnscrypt_proxy-windows_service.Tpo $(DEPDIR)/dnscrypt_proxy-windows_service.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='windows_service.c' object='dnscrypt_proxy-windows_service.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dnscrypt_proxy_CFLAGS) $(CFLAGS) -c -o dnscrypt_proxy-windows_service.o `test -f 'windows_service.c' || echo '$(srcdir)/'`windows_service.c

dnscrypt_proxy-windows_service.obj: windows_service.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dnscrypt_proxy_CFLAGS) $(CFLAGS) -MT dnscrypt_proxy-windows_service.obj -MD -MP -MF $(DEPDIR)/dnscrypt_proxy-windows_service.Tpo -c -o dnscrypt_proxy-windows_service.obj `if test -f 'windows_service.c'; then $(CYGPATH_W) 'windows_service.c'; else $(CYGPATH_W) '$(srcdir)/windows_service.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/dnscrypt_proxy-windows_service.Tpo $(DEPDIR)/dnscrypt_proxy-windows_service.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='windows_service.c' object='dnscrypt_proxy-windows_service.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dnscrypt_proxy_CFLAGS) $(CFLAGS) -c -o dnscrypt_proxy-windows_service.obj `if test -f 'windows_service.c'; then $(CYGPATH_W) 'windows_service.c'; else $(CYGPATH_W) '$(srcdir)/windows_service.c'; fi`

dnscrypt_proxy-plugin_options.o: plugin_options.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dnscrypt_proxy_CFLAGS) $(CFLAGS) -MT dnscrypt_proxy-plugin_options.o -MD -MP -MF $(DEPDIR)/dnscrypt_proxy-plugin_options.Tpo -c -o dnscrypt_proxy-plugin_options.o `test -f 'plugin_options.c' || echo '$(srcdir)/'`plugin_options.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/dnscrypt_proxy-plugin_options.Tpo $(DEPDIR)/dnscrypt_proxy-plugin_options.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='plugin_options.c' object='dnscrypt_proxy-plugin_options.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dnscrypt_proxy_CFLAGS) $(CFLAGS) -c -o dnscrypt_proxy-plugin_options.o `test -f 'plugin_options.c' || echo '$(srcdir)/'`plugin_options.c

dnscrypt_proxy-plugin_options.obj: plugin_options.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dnscrypt_proxy_CFLAGS) $(CFLAGS) -MT dnscrypt_proxy-plugin_options.obj -MD -MP -MF $(DEPDIR)/dnscrypt_proxy-plugin_options.Tpo -c -o dnscrypt_proxy-plugin_options.obj `if test -f 'plugin_options.c'; then $(CYGPATH_W) 'plugin_options.c'; else $(CYGPATH_W) '$(srcdir)/plugin_options.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/dnscrypt_proxy-plugin_options.Tpo $(DEPDIR)/dnscrypt_proxy-plugin_options.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='plugin_options.c' object='dnscrypt_proxy-plugin_options.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dnscrypt_proxy_CFLAGS) $(CFLAGS) -c -o dnscrypt_proxy-plugin_options.obj `if test -f 'plugin_options.c'; then $(CYGPATH_W) 'plugin_options.c'; else $(CYGPATH_W) '$(srcdir)/plugin_options.c'; fi`

dnscrypt_proxy-plugin_support.o: plugin_support.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dnscrypt_proxy_CFLAGS) $(CFLAGS) -MT dnscrypt_proxy-plugin_support.o -MD -MP -MF $(DEPDIR)/dnscrypt_proxy-plugin_support.Tpo -c -o dnscrypt_proxy-plugin_support.o `test -f 'plugin_support.c' || echo '$(srcdir)/'`plugin_support.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/dnscrypt_proxy-plugin_support.Tpo $(DEPDIR)/dnscrypt_proxy-plugin_support.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='plugin_support.c' object='dnscrypt_proxy-plugin_support.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dnscrypt_proxy_CFLAGS) $(CFLAGS) -c -o dnscrypt_proxy-plugin_support.o `test -f 'plugin_support.c' || echo '$(srcdir)/'`plugin_support.c

dnscrypt_proxy-plugin_support.obj: plugin_support.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dnscrypt_proxy_CFLAGS) $(CFLAGS) -MT dnscrypt_proxy-plugin_support.obj -MD -MP -MF $(DEPDIR)/dnscrypt_proxy-plugin_support.Tpo -c -o dnscrypt_proxy-plugin_support.obj `if test -f 'plugin_support.c'; then $(CYGPATH_W) 'plugin_support.c'; else $(CYGPATH_W) '$(srcdir)/plugin_support.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/dnscrypt_proxy-plugin_support.Tpo $(DEPDIR)/dnscrypt_proxy-plugin_support.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='plugin_support.c' object='dnscrypt_proxy-plugin_support.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dnscrypt_proxy_CFLAGS) $(CFLAGS) -c -o dnscrypt_proxy-plugin_support.obj `if test -f 'plugin_support.c'; then $(CYGPATH_W) 'plugin_support.c'; else $(CYGPATH_W) '$(srcdir)/plugin_support.c'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-am
all-am: Makefile $(PROGRAMS)
installdirs:
	for dir in "$(DESTDIR)$(sbindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
clean: clean-am

clean-am: clean-generic clean-libtool clean-sbinPROGRAMS \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-sbinPROGRAMS

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-sbinPROGRAMS

.MAKE: all check install install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am check check-am clean clean-generic \
	clean-libtool clean-sbinPROGRAMS cscopelist-am ctags ctags-am \
	distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-sbinPROGRAMS install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags tags-am uninstall uninstall-am uninstall-sbinPROGRAMS

.PRECIOUS: Makefile


probes.h: @PROBES_SOURCE@
	cat @PROBES_SOURCE@ > $@

probes_dnscrypt_proxy.h: probes_dnscrypt_proxy.d
	@DTRACE@ -o $@ -h -s probes_dnscrypt_proxy.d

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
